# --------------------------------- Datasource ---------------------------------
#
# Required datasource parameters
#
#spring:
#  datasource:
#    driver-class-name: org.postgresql.Driver
#    url: jdbc:postgresql://${DATABASE_HOST}:${DATABASE_PORT}/${DATABASE_NAME}
#    username: ${DATABASE_USER}
#    password: ${DATABASE_PASSWORD}
#  jpa.properties.hibernate.dialect: org.hibernate.dialect.PostgreSQL94Dialect
#
# --------------------------------- Auth-Client --------------------------------
#
#time-service:
#  schema: ${TIME_SERVICE_SCHEMA}
#  host: ${TIME_SERVICE_HOST}
#  path: ${TIME_SERVICE_PATH:/users}
#  time_url: time
#  port: ${TIME_SERVICE_PORT}
#  connection_timeout: ${TIME_SERVICE_CONNECTION_TIMEOUT}
#auth:
#  server:
#    schema: ${AUTH_SERVICE_SCHEMA}
#    host: ${AUTH_SERVICE_HOST}
#    path: ${AUTH_SERVICE_PATH}
#    port: ${AUTH_SERVICE_PORT}
#    connection_timeout: ${AUTH_SERVICE_CONNECTION_TIMEOUT}
#    url:
#      refresh: ${AUTH_SERVICE_REFRESH_URL}
#      login: ${AUTH_SERVICE_LOGIN_URL}
#      headers:
#        refresh_token: ${AUTH_SERVICE_REFRESH_HEADER}
#        login: ${AUTH_SERVICE_LOGIN_HEADER}
#  security:
#    public_key: ${PUBLIC_KEY_PATH}
#  validation:
#    exclude:
#      methods: ${AUTH_VALIDATION_EXCLUDE_METHODS}
#      paths: ${AUTH_VALIDATION_EXCLUDE_PATH}
#
# --------------------------------- Audit-Producer -----------------------------
#
#spring.kafka.topic.audit: ${AUDIT_KAFKA_TOPIC}
#kafka:
#  server: ${AUDIT_KAFKA_BOOTSTRAP_SERVER}
#  producer.id: ${AUDIT_PRODUCER_ID}
#audit.producer.source: ${AUDIT_PRODUCER_SOURCE}

# ---------------------------- Files Management Client -------------------------
#
#file:
#  manager:
#    client:
#      url: ${FILE_MANAGER_URL}
#      connection-timeout: ${FILE_MANAGER_CONNECTION_TIMEOUT}
#      connection-request-timeout: ${FILE_MANAGER_CONNECTION_REQUEST_TIMEOUT}
#      read-timeout: ${FILE_MANAGER_READ_TIMEOUT}

server:
  tomcat:
    max-threads: 400
  connection-timeout: 1000ms
spring:
  datasource:
    hikari:
      connectionTimeout: 10000
      maximum-pool-size: 30
      minimum-idle: 10
      idle-timeout: 30000
  jpa:
    show-sql: false
    hibernate.ddl-auto: none
management:
  endpoints:
    web:
      exposure:
        include: ["health", "info", "prometheus", "metrics"]
  endpoint:
    prometheus:
      enabled: true
  metrics:
    export:
      prometheus:
        enabled: true
files:
  default-bucket: campaigns
